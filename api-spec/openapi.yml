openapi: 3.0.3
info:
  title: Cart Manager
  version: 1.0.0
servers:
  - url: localhost:3030
paths:
  /items:
    get:
      summary: List all items
      operationId: getAllItems
      tags:
        - item
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/ItemResponse'
    post:
      summary: Add new item
      operationId: addNewItem
      tags:
        - item
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/ItemPostUpdateRequest'
      responses:
        '200':
          description: successful operation
          
  /items/{itemId}:
    get:
      summary: Get item by ID
      operationId: getItemById
      tags:
        - item
      parameters:
        - name: itemId
          in: path
          description: ID of item to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemResponse'
        '400':
          description: Invalid ID supplied
        '404':
          description: Item not found
    put:
      summary: Update an items name and/or price
      operationId: updateItem
      tags:
        - item
      parameters:
        - name: itemId
          in: path
          description: ID of item that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/ItemPostUpdateRequest'
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: Item not found
    delete:
      summary: Delete item by ID
      operationId: deleteItemById
      tags:
        - item
      parameters:
        - name: itemId
          in: path
          description: ID of item to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: Item not found
  
  /users:
    get:
      summary: Show all users
      operationId: showAllUsers
      tags:
        - user
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/UserResponse'
    post:
      summary: Add new user
      operationId: addNewUser
      tags:
        - user
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/UserPostUpdateRequest'
      responses:
        '200':
          description: successful operation
          
  /users/{userId}:
    get:
      summary: Get user by ID
      operationId: getUserById
      tags:
        - user
      parameters:
        - name: userId
          in: path
          description: ID of user
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                items: 
                  $ref: '#/components/schemas/UserResponse'
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
    put:
      summary: Update an username
      operationId: updateUser
      tags:
        - user
      parameters:
        - name: userId
          in: path
          description: ID of user that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/UserPostUpdateRequest'
      responses:
        '200':
          description: successful operation
    delete:
      summary: Delete user by ID
      operationId: deleteUserById
      tags:
        - user
      parameters:
        - name: userId
          in: path
          description: ID of user to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
  
  /carts:
    get:
      summary: Show all carts
      operationId: showAllCarts
      tags:
        - cart
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/CartResponse'
    post:
      summary: Add new cart
      operationId: addNewCart
      tags:
        - cart
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/CartPostRequest'
      responses:
        '200':
          description: successful operation
        '404':
          description: User not found

  /carts/user/{userId}:
    delete:
      summary: Delete carts by userID
      operationId: deleteCartsByUserId
      tags:
        - cart
      parameters:
        - name: userId
          in: path
          description: ID of user whose carts to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
  /carts/{cartId}:
    delete:
      summary: Delete cart by cartID
      operationId: deleteCartById
      tags:
        - cart
      parameters:
        - name: cartId
          in: path
          description: ID of cart to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: Cart not found
  
  /shopping:
    post:
      summary: Add item to cart
      operationId: addItemToCart
      tags:
        - shopping
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/ShoppingPostRequest'
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: Not found
    put:
      summary: Remove item from cart
      operationId: removeItemFromCart
      tags:
        - shopping
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/ShoppingRemoveRequest'
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: Entry not found
  /shopping/{cartId}:
    get:
      summary: Get cart content by cartId
      operationId: showCartContent
      tags:
        - shopping
      parameters:
        - name: cartId
          in: path
          description: ID of cart from which content is to get
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                items: 
                  $ref: '#/components/schemas/CartContentResponse'
        '400':
          description: Invalid ID supplied
        '404':
          description: Cart not found

  /shopping/clear/{cartId}:
    delete:
      summary: Clear all items in cart by cartId
      operationId: clearOutCart
      tags:
        - shopping
      parameters:
        - name: cartId
          in: path
          description: ID of cart to clear
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: Cart not found

components:
  schemas: 
    $ref: './schemas/_index.yml'
      
